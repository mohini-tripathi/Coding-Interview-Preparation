// Given two string check is one is permutation of other
// read rade

//brute force approach
    static boolean isPermutation(String str1, String str2) {
	if(str1.length() != str2.length()) 
		return false;
	boolean flag = true;
	for(int i=0;i<str1.length();i++) {
		if(!str2.contains(str1.substring(i,i+1))) {
			flag = false;
			break;
		}
			
	}
	return flag;

}

//sorting the strings

boolean isPermutation(String str1, String str2) {
	if(str1.length() != str2.length()) 
		return false;
	char[] char1 = str1.toCharArray();
	char[] char2 = str2.toCharArray();
	if(chart.equals(char2))
		return true;
	return false;
}

//counting the characters

boolean isPermutation(String str1, String str2) {
	if(str1.length() != str2.length()) 
		return false;
	int[] letters = new int[128];	
	char[] char1 = str1.toCharArray();
	for(char c:char1) {
		letters[c]++;
	}
	for(int i=0;i<str2.length;i++) {
		int c = (int) str2.charAt(i);
		letters[c]--;
		if(letter[c]<0)                         //Discuss why it is checking less than.
			return false;
	}
	return true;
}	

