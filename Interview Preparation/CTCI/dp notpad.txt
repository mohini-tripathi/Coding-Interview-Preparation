kaveri chavva
atci i and f community
industry and function community
network learning
acti cop



int[][] memo = int[1001][10001];
memo[][] = -1;
int knapsack(int[] value, int[] weight, int capacity, int n) { //weight = 1 2 3 val= 1 2 3 cap = 4
	if(capacity==0 || n==0)
		return 0;
	else if(memo[n-1][w-1] !=-1)
		return memo[n-1][w-1];
	else if(weight[n-1]<=capacity) {
		return memo[n-1][w-1] = Math.max(value[n-1] + knapsack(value, weight, capacity-weight[n-1], n-1), knapsack(value, weight, capacity, n-1));
	}
	else if(weight[n-1]>capacity) {
		return memo[n-1][w-1]=(knapsack(value, weight, capacity, n-1);
	}
}

// Question - Subset sum, equal sum partition, count of subset sum with a given sum, minimum subset sum difference, count no. of subset with given difference
target sum. parent problem - 0/1 knapsack.

// 


